JurrasicPark

Avaliable API's for Postman
using https://localhost:5001/
/api/v1/Cage/GetAllCages:Get
/api/v1/Cage/GetCageById?cageId={1}:Get
/api/v1/Cage/GetCageCapacity?cageId={1}:Get
/api/v1/Cage/CreateCage  CreateCage:Post
/api/v1/Cage/EditCagePower?cageId={1}&isPowered{2}:Get
/api/v1/Dinosaur/GetAllDinosaurs:Get
/api/v1/Dinosaur/GetDinosaursById?dinosaurId={1}:Get
/api/v1/Dinosaur/MoveDinosaur?dinosaurId={1}&cageId={2}:Get
/api/v1/Dinosaur/CreateDinosaur CreateDinosaur:Post
/api/v1/Dinosaur/GetListDinosaursCagedById?cageId={1}:Get

Swagger
https://localhost:5001/swagger/index.html

Json 
CreateCage{
isPowered	boolean
maxCapacity	integer($int32)
}

Cage{
id	integer($int32)
isPowered	boolean
maxCapacity	integer($int32)
}

ResponseDinosaur{
id	integer($int32)
name	string
nullable: true
speciesTypeDescription	string
nullable: true
foodTypeDescription	string
nullable: true
cageId	integer($int32)
}

CreateDinosaur{
name	string
nullable: true
speciesTypeId	integer($int32)
foodTypeId	integer($int32)
cageId	integer($int32)
}

Database commands used.
Add-Migration InitialCreate
update-database

Packages Used
Sqlite
Tools
Swashbuckle

Things to do better
Use Redis Cache instead of calling the database so many times.
Use Fluent Validation. I Wrote custom validation but fluent has more options.
Maybe added a login or authentication/scope to access api's


1 Thing
I could have created a relationship to Species Type and Food. So when creating a Dinosaur a user could not make a Trex a herbivore.
I could have made species have food type. 

Species Class
public int id { get; set; }
public string SpeciesTypeName { get; set; }
public int foodtypeId {get;set;}

OnCreate
Validate by 
Saying if Tyrannosaurus is chosen for id then it auto picks foodId.


Further that is one enhancement I did want to make. But was worried, about what happens if you wanted to create a new species? Or Add a new Foodtype. then tieing all of that back together. (I would just spin my wheels. lol) 


